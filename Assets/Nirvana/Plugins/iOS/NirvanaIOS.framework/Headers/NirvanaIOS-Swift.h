// Generated by Apple Swift version 4.0 effective-3.2 (swiftlang-900.0.65 clang-900.0.37)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("NirvanaIOS")

/// The application delegate event listener.
SWIFT_PROTOCOL("_TtP10NirvanaIOS24AppDelegateEventListener_")
@protocol AppDelegateEventListener <NSObject>
@optional
/// Callback when the ‘didFinishLaunching’ event come.
- (void)didFinishLaunchingWithNotification:(NSNotification * _Nonnull)notification;
/// Callback when the ‘onOpenURL’ event come.
- (void)onOpenURLWithNotification:(NSNotification * _Nonnull)notification;
@end


/// The ios audio player.
SWIFT_CLASS("_TtC10NirvanaIOS11AudioPlayer")
@interface AudioPlayer : NSObject
/// Play the audio at specify uri.
+ (BOOL)playWithUri:(NSString * _Nonnull)uri SWIFT_WARN_UNUSED_RESULT;
/// Stop the playing audio.
+ (void)stop;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The ios audio recorder.
SWIFT_CLASS("_TtC10NirvanaIOS13AudioRecorder")
@interface AudioRecorder : NSObject
/// Start to record the audio.
+ (BOOL)start SWIFT_WARN_UNUSED_RESULT;
/// Stop to record the audio.
/// :return The file path record the audio.
+ (NSString * _Nonnull)stop SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSBundle (SWIFT_EXTENSION(NirvanaIOS))
/// Try to find value by key in all bundles.
+ (id _Nullable)findValueWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


/// The channel agent protocol.
SWIFT_PROTOCOL("_TtP10NirvanaIOS12ChannelAgent_")
@protocol ChannelAgent <AppDelegateEventListener>
- (nonnull instancetype)init;
/// Gets the channel ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull ChannelID;
@property (nonatomic, readonly, copy) NSString * _Nonnull AgentID;
@property (nonatomic, readonly, copy) NSString * _Nonnull getInitUrl;
@property (nonatomic, readonly, copy) NSString * _Nonnull getChannelResPath;
/// Initialize this channel.
- (void)initialize;
/// Login the account.
/// :userInfo The user information represent in json format.
- (void)loginWithUserInfo:(NSString * _Nonnull)userInfo;
/// Logout the account.
/// :userInfo The user information represent in json format.
- (void)logoutWithUserInfo:(NSString * _Nonnull)userInfo;
/// Pay money for this account.
/// :title The user information represent in json format.
/// :orderID The order ID of this charge, which is unique for each charge.
/// :productID The product ID need to charge.
/// :amount How many to charge.
- (void)payWithUserInfo:(NSString * _Nonnull)userInfo orderID:(NSString * _Nonnull)orderID productID:(NSString * _Nonnull)productID amount:(double)amount;
- (void)ReportEnterZoneWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)ReportCreateRoleWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)ReportLoginRoleWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)ReportLogoutRoleWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)ReportLevelUpWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)OpenUrlWithUrl:(NSString * _Nonnull)url;
- (void)FacebookActiveWithType:(NSString * _Nonnull)type;
@end


/// The accessor for find the channel agent.
SWIFT_CLASS("_TtC10NirvanaIOS20ChannelAgentAccessor")
@interface ChannelAgentAccessor : NSObject
/// Gets the agent.
+ (id <ChannelAgent> _Nonnull)getAgent SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ChannelLoginData;

/// The event center for channel agent.
SWIFT_CLASS("_TtC10NirvanaIOS17ChannelAgentEvent")
@interface ChannelAgentEvent : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) void (^ _Nullable initCallback)(BOOL);)
+ (void (^ _Nullable)(BOOL))initCallback SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
+ (void)setInitCallback:(void (^ _Nullable)(BOOL))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) void (^ _Nullable loginCallback)(ChannelLoginData * _Nonnull);)
+ (void (^ _Nullable)(ChannelLoginData * _Nonnull))loginCallback SWIFT_WARN_UNUSED_RESULT;
+ (void)setLoginCallback:(void (^ _Nullable)(ChannelLoginData * _Nonnull))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) void (^ _Nullable logoutCallback)(void);)
+ (void (^ _Nullable)(void))logoutCallback SWIFT_WARN_UNUSED_RESULT;
+ (void)setLogoutCallback:(void (^ _Nullable)(void))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) void (^ _Nullable exitCallback)(void);)
+ (void (^ _Nullable)(void))exitCallback SWIFT_WARN_UNUSED_RESULT;
+ (void)setExitCallback:(void (^ _Nullable)(void))value;
+ (void)initializedWithResult:(BOOL)result;
+ (void)loginWithData:(ChannelLoginData * _Nonnull)data;
+ (void)logout;
+ (void)exit;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

/// The channel login data.
SWIFT_CLASS("_TtC10NirvanaIOS16ChannelLoginData")
@interface ChannelLoginData : NSObject
@property (nonatomic, copy) NSString * _Nullable AccountID;
@property (nonatomic, copy) NSString * _Nullable Token;
@property (nonatomic, copy) NSString * _Nullable UserName;
@property (nonatomic, copy) NSString * _Nullable Error;
@property (nonatomic, copy) NSString * _Nullable TimeStamp;
@property (nonatomic, copy) NSString * _Nullable FcmFlag;
@property (nonatomic, copy) NSString * _Nullable AccountType;
- (NSString * _Nonnull)GetJson SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The default channel agent.
SWIFT_CLASS("_TtC10NirvanaIOS19DefaultChannelAgent")
@interface DefaultChannelAgent : NSObject <ChannelAgent>
/// Gets the channel ID.
@property (nonatomic, readonly, copy) NSString * _Nonnull ChannelID;
@property (nonatomic, readonly, copy) NSString * _Nonnull AgentID;
@property (nonatomic, readonly, copy) NSString * _Nonnull getInitUrl;
@property (nonatomic, readonly, copy) NSString * _Nonnull getChannelResPath;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Initialize this channel.
- (void)initialize;
/// Login the account.
- (void)loginWithUserInfo:(NSString * _Nonnull)userInfo;
/// Logout the account.
- (void)logoutWithUserInfo:(NSString * _Nonnull)userInfo;
/// Pay money for this account.
- (void)payWithUserInfo:(NSString * _Nonnull)userInfo orderID:(NSString * _Nonnull)orderID productID:(NSString * _Nonnull)productID amount:(double)amount;
- (void)ReportEnterZoneWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)ReportCreateRoleWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)ReportLoginRoleWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)ReportLogoutRoleWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)ReportLevelUpWithUserInfo:(NSString * _Nonnull)userInfo;
- (void)OpenUrlWithUrl:(NSString * _Nonnull)url;
- (void)FacebookActiveWithType:(NSString * _Nonnull)type;
@end


/// The ios device tool.
SWIFT_CLASS("_TtC10NirvanaIOS10DeviceTool")
@interface DeviceTool : NSObject
/// Get the unique ID of this device.
+ (NSString * _Nonnull)getUniqueID SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getIDFV SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This is a tool to open an message box.
SWIFT_CLASS("_TtC10NirvanaIOS13DialogManager")
@interface DialogManager : NSObject
/// Show a message dialog.
/// :title The title of the alert dialog.
/// :message The message of the alert dialog.
/// :buttonLabel The button label of this dialog.
/// :buttonListener The listener when button clicked.
+ (void)showMessageWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message buttonLabel:(NSString * _Nonnull)buttonLabel buttonListener:(void (^ _Nonnull)(void))buttonListener;
/// Show a confirm dialog.
/// :title The title of the alert dialog.
/// :message The message of the alert dialog.
/// :confirmLabel The label for positive button.
/// :confirmListener The listener when positive button clicked.
/// :cancelLabel The label for negative button.
/// :cancelListener The listener when negative button clicked.
+ (void)showConfirmWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message confirmLabel:(NSString * _Nonnull)confirmLabel confirmListener:(void (^ _Nonnull)(void))confirmListener cancelLabel:(NSString * _Nonnull)cancelLabel cancelListener:(void (^ _Nonnull)(void))cancelListener;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImagePickerController;

/// The ios image picker.
SWIFT_CLASS("_TtC10NirvanaIOS11ImagePicker")
@interface ImagePicker : NSObject <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
@property (nonatomic) BOOL isPicking;
@property (nonatomic, copy) void (^ _Nullable completion)(NSString * _Nullable, NSString * _Nullable);
/// Pick image from camera.
/// :pickSize The pick size of the image.
/// :scaleSize The sacle size of the image.
/// :listener: The listener for avatar created.
- (void)pickFromCameraWithPickSize:(NSInteger)pickSize scaleSize:(NSInteger)scaleSize completion:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))completion;
/// Pick image from photo library.
/// :pickSize The pick size of the image.
/// :scaleSize The sacle size of the image.
/// :listener: The listener for avatar created.
- (void)pickFromPhotoWithPickSize:(NSInteger)pickSize scaleSize:(NSInteger)scaleSize completion:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))completion;
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
- (void)dismissViewController:(UIImagePickerController * _Nonnull)picker;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class UIWebView;
@class UIToolbar;
@class UIBarButtonItem;

SWIFT_CLASS("_TtC10NirvanaIOS31NirvanaIOS_ChannelAgent_WebView")
@interface NirvanaIOS_ChannelAgent_WebView : NSObject <UIAlertViewDelegate, UIWebViewDelegate>
@property (nonatomic, strong) UIView * _Nullable m_ui_view;
@property (nonatomic, strong) UIWebView * _Nullable m_ui_web_view;
@property (nonatomic, strong) UIToolbar * _Nullable m_ui_toolbar;
@property (nonatomic, strong) UIBarButtonItem * _Nullable m_ui_btn_back;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NirvanaIOS_ChannelAgent_WebView * _Nonnull shared;)
+ (NirvanaIOS_ChannelAgent_WebView * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)OpenWithUrl:(NSString * _Nonnull)url;
- (void)OpenTestWithUrl:(NSString * _Nonnull)url;
- (void)Close;
- (void)BackClickedWithSender:(UIBarButtonItem * _Nonnull)sender;
- (BOOL)webView:(UIWebView * _Nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * _Nonnull)request navigationType:(UIWebViewNavigationType)navigationType SWIFT_WARN_UNUSED_RESULT;
- (void)webViewDidStartLoad:(UIWebView * _Nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * _Nonnull)webView;
- (void)webView:(UIWebView * _Nonnull)webView didFailLoadWithError:(NSError * _Nonnull)error;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
